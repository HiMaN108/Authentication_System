{"ast":null,"code":"import axios from\"axios\";import{jwtDecode}from\"jwt-decode\";axios.defaults.baseURL=process.env.REACT_APP_SERVER_DOMAIN||\"https://authentication-system-bxzd.onrender.com\";/** Make API Requests *//** To get username from Token */export async function getUsername(){const token=localStorage.getItem(\"token\");if(!token)return Promise.reject(\"Cannot find Token\");let decode=jwtDecode(token);return decode;}/** authenticate function */export async function authenticate(username){try{return await axios.post(\"/api/authenticate\",{username});}catch(error){return{error:\"Username doesn't exist...!\"};}}/** get User details */export async function getUser(_ref){let{username}=_ref;try{const{data}=await axios.get(`/api/user/${username}`);return{data};}catch(error){return{error:\"Password doesn't Match...!\"};}}/** register user function */export async function registerUser(credentials){try{const{data:{msg},status}=await axios.post(`/api/register`,credentials);let{username,email}=credentials;/** send email */if(status===201){await axios.post(\"/api/registerMail\",{username,userEmail:email,text:msg});}return Promise.resolve(msg);}catch(error){console.error(\"Registration Error:\",error.response?error.response.data:error.message);return Promise.reject({error:error.response?error.response.data:\"Registration failed\"});}}/** login function */export async function verifyPassword(_ref2){let{username,password}=_ref2;try{if(username){const{data}=await axios.post(\"/api/login\",{username,password});return Promise.resolve({data});}}catch(error){return Promise.reject({error:\"Password doesn't Match...!\"});}}/** update user profile function */export async function updateUser(response){try{const token=await localStorage.getItem(\"token\");const data=await axios.put(\"/api/updateuser\",response,{headers:{Authorization:`Bearer ${token}`}});return Promise.resolve({data});}catch(error){return Promise.reject({error:\"Couldn't Update Profile...!\"});}}/** generate OTP */export async function generateOTP(username){try{const{data:{code},status}=await axios.get(\"/api/generateOTP\",{params:{username}});// send mail with the OTP\nif(status===201){let{data:{email}}=await getUser({username});let text=`Your Password Recovery OTP is ${code}. Verify and recover your password.`;await axios.post(\"/api/registerMail\",{username,userEmail:email,text,subject:\"Password Recovery OTP\"});}return Promise.resolve(code);}catch(error){return Promise.reject({error});}}/** verify OTP */export async function verifyOTP(_ref3){let{username,code}=_ref3;try{const{data,status}=await axios.get(\"/api/verifyOTP\",{params:{username,code}});return{data,status};}catch(error){return Promise.reject(error);}}/** reset password */export async function resetPassword(_ref4){let{username,password}=_ref4;try{const{data,status}=await axios.put(\"/api/resetPassword\",{username,password});return Promise.resolve({data,status});}catch(error){return Promise.reject({error});}}","map":{"version":3,"names":["axios","jwtDecode","defaults","baseURL","process","env","REACT_APP_SERVER_DOMAIN","getUsername","token","localStorage","getItem","Promise","reject","decode","authenticate","username","post","error","getUser","_ref","data","get","registerUser","credentials","msg","status","email","userEmail","text","resolve","console","response","message","verifyPassword","_ref2","password","updateUser","put","headers","Authorization","generateOTP","code","params","subject","verifyOTP","_ref3","resetPassword","_ref4"],"sources":["C:/Users/him20/Downloads/Authentication_System-main/Authentication_System-main/client/src/helper/helper.js"],"sourcesContent":["import axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\n\naxios.defaults.baseURL =\n  process.env.REACT_APP_SERVER_DOMAIN ||\n  \"https://authentication-system-bxzd.onrender.com\";\n\n/** Make API Requests */\n\n/** To get username from Token */\nexport async function getUsername() {\n  const token = localStorage.getItem(\"token\");\n  if (!token) return Promise.reject(\"Cannot find Token\");\n  let decode = jwtDecode(token);\n  return decode;\n}\n\n/** authenticate function */\nexport async function authenticate(username) {\n  try {\n    return await axios.post(\"/api/authenticate\", { username });\n  } catch (error) {\n    return { error: \"Username doesn't exist...!\" };\n  }\n}\n\n/** get User details */\nexport async function getUser({ username }) {\n  try {\n    const { data } = await axios.get(`/api/user/${username}`);\n    return { data };\n  } catch (error) {\n    return { error: \"Password doesn't Match...!\" };\n  }\n}\n\n/** register user function */\nexport async function registerUser(credentials) {\n  try {\n    const {\n      data: { msg },\n      status,\n    } = await axios.post(`/api/register`, credentials);\n\n    let { username, email } = credentials;\n\n    /** send email */\n    if (status === 201) {\n      await axios.post(\"/api/registerMail\", {\n        username,\n        userEmail: email,\n        text: msg,\n      });\n    }\n\n    return Promise.resolve(msg);\n  } catch (error) {\n    console.error(\n      \"Registration Error:\",\n      error.response ? error.response.data : error.message\n    );\n    return Promise.reject({\n      error: error.response ? error.response.data : \"Registration failed\",\n    });\n  }\n}\n/** login function */\nexport async function verifyPassword({ username, password }) {\n  try {\n    if (username) {\n      const { data } = await axios.post(\"/api/login\", { username, password });\n      return Promise.resolve({ data });\n    }\n  } catch (error) {\n    return Promise.reject({ error: \"Password doesn't Match...!\" });\n  }\n}\n\n/** update user profile function */\nexport async function updateUser(response) {\n  try {\n    const token = await localStorage.getItem(\"token\");\n    const data = await axios.put(\"/api/updateuser\", response, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return Promise.resolve({ data });\n  } catch (error) {\n    return Promise.reject({ error: \"Couldn't Update Profile...!\" });\n  }\n}\n\n/** generate OTP */\nexport async function generateOTP(username) {\n  try {\n    const {\n      data: { code },\n      status,\n    } = await axios.get(\"/api/generateOTP\", { params: { username } });\n\n    // send mail with the OTP\n    if (status === 201) {\n      let {\n        data: { email },\n      } = await getUser({ username });\n      let text = `Your Password Recovery OTP is ${code}. Verify and recover your password.`;\n      await axios.post(\"/api/registerMail\", {\n        username,\n        userEmail: email,\n        text,\n        subject: \"Password Recovery OTP\",\n      });\n    }\n    return Promise.resolve(code);\n  } catch (error) {\n    return Promise.reject({ error });\n  }\n}\n\n/** verify OTP */\nexport async function verifyOTP({ username, code }) {\n  try {\n    const { data, status } = await axios.get(\"/api/verifyOTP\", {\n      params: { username, code },\n    });\n    return { data, status };\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n/** reset password */\nexport async function resetPassword({ username, password }) {\n  try {\n    const { data, status } = await axios.put(\"/api/resetPassword\", {\n      username,\n      password,\n    });\n    return Promise.resolve({ data, status });\n  } catch (error) {\n    return Promise.reject({ error });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}