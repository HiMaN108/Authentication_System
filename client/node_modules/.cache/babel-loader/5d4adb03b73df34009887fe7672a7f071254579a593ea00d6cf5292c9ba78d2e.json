{"ast":null,"code":"import{Navigate}from\"react-router-dom\";import{useAuthStore}from\"../store/store\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthorizeUser=_ref=>{let{children}=_ref;const token=localStorage.getItem('token');if(!token){return/*#__PURE__*/_jsx(Navigate,{to:'/',replace:true});}return children;};export const ProtectRoute=_ref2=>{let{children}=_ref2;const username=useAuthStore.getState().auth.username;if(!username){return/*#__PURE__*/_jsx(Navigate,{to:'/',replace:true});}return children;};","map":{"version":3,"names":["Navigate","useAuthStore","jsx","_jsx","AuthorizeUser","_ref","children","token","localStorage","getItem","to","replace","ProtectRoute","_ref2","username","getState","auth"],"sources":["C:/Users/him20/Downloads/Authentication_System-main/Authentication_System-main/client/src/middleware/auth.js"],"sourcesContent":["\nimport { Navigate } from \"react-router-dom\";\nimport { useAuthStore } from \"../store/store\";\n\nexport const AuthorizeUser = ({ children }) => {\n    const token = localStorage.getItem('token');\n\n    if(!token){\n        return <Navigate to={'/'} replace={true}></Navigate>\n    }\n\n    return children;\n}\n\n\nexport const ProtectRoute = ({ children }) => {\n    const username = useAuthStore.getState().auth.username;\n    if(!username){\n        return <Navigate to={'/'} replace={true}></Navigate>\n    }\n    return children;\n}"],"mappings":"AACA,OAASA,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,YAAY,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,MAAO,MAAM,CAAAC,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAAAE,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAG,CAACF,KAAK,CAAC,CACN,mBAAOJ,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAE,GAAI,CAACC,OAAO,CAAE,IAAK,CAAW,CAAC,CACxD,CAEA,MAAO,CAAAL,QAAQ,CACnB,CAAC,CAGD,MAAO,MAAM,CAAAM,YAAY,CAAGC,KAAA,EAAkB,IAAjB,CAAEP,QAAS,CAAC,CAAAO,KAAA,CACrC,KAAM,CAAAC,QAAQ,CAAGb,YAAY,CAACc,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACF,QAAQ,CACtD,GAAG,CAACA,QAAQ,CAAC,CACT,mBAAOX,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAE,GAAI,CAACC,OAAO,CAAE,IAAK,CAAW,CAAC,CACxD,CACA,MAAO,CAAAL,QAAQ,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}