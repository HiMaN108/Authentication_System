{"ast":null,"code":"import toast from\"react-hot-toast\";import{authenticate}from\"./helper.js\";//validate login page username\nexport async function usernameValidate(values){const errors=usernameVerify({},values);if(values.username){// check user existenve or not\nconst{status}=await authenticate(values.username);if(status!==200){errors.exit=toast.error(\" User does not exist...!\");}}return errors;}// validate password\nexport async function passwordValidate(values){const errors=passwordVerify({},values);return errors;}//validate reset password\nexport async function resetPasswordValidation(values){const errors=passwordVerify({},values);if(values.password!==values.confirm_pwd){errors.exist=toast.error(\"Password not match...!\");}return errors;}/** validate register form */export async function registerValidation(values){const errors=usernameVerify({},values);passwordVerify(errors,values);emailVerify(errors,values);return errors;}/** validate profile page */export async function profileValidation(values){const errors=emailVerify({},values);return errors;}//********************************************************************************************************8 */\n//validate password\nfunction passwordVerify(){let errors=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let values=arguments.length>1?arguments[1]:undefined;const specialChars=/[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>/?~]/;if(!values.password){errors.password=toast.error(\"Password Required...!\");}else if(values.password.includes(\" \")){errors.password=toast.error(\"wrong password..!\");}else if(values.password.length<4){errors.password=toast.error(\"Password must be more than 4\");}else if(!specialChars.test(values.password)){errors.password=toast.error(\"Password must have special character\");}return errors;}//validate for username\nfunction usernameVerify(){let error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let values=arguments.length>1?arguments[1]:undefined;if(!values.username){error.username=toast.error(\"Username Required...!\");}else if(values.username.includes(\" \")){error.username=toast.error(\"Invalid Username...!\");}return error;}/** validate email */function emailVerify(){let error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let values=arguments.length>1?arguments[1]:undefined;if(!values.email){error.email=toast.error(\"Email Required...!\");}else if(values.email.includes(\" \")){error.email=toast.error(\"Wrong Email...!\");}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){error.email=toast.error(\"Invalid email address...!\");}return error;}","map":{"version":3,"names":["toast","authenticate","usernameValidate","values","errors","usernameVerify","username","status","exit","error","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","exist","registerValidation","emailVerify","profileValidation","arguments","length","undefined","specialChars","includes","test","email"],"sources":["C:/Users/him20/Downloads/Authentication_System-main/Authentication_System-main/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\";\nimport { authenticate } from \"./helper.js\";\n\n//validate login page username\n\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n\n  if (values.username) {\n    // check user existenve or not\n    const { status } = await authenticate(values.username);\n\n    if (status !== 200) {\n      errors.exit = toast.error(\" User does not exist...!\");\n    }\n  }\n  return errors;\n}\n// validate password\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n\n  return errors;\n}\n\n//validate reset password\n\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password not match...!\");\n  }\n\n  return errors;\n}\n\n/** validate register form */\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n\n  return errors;\n}\n\n/** validate profile page */\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n  return errors;\n}\n\n//********************************************************************************************************8 */\n\n//validate password\n\nfunction passwordVerify(errors = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>/?~]/;\n\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"wrong password..!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n\n  return errors;\n}\n//validate for username\n\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required...!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n\n  return error;\n}\n\n/** validate email */\nfunction emailVerify(error = {}, values) {\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n\n  return error;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}